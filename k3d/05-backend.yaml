---
# Backend Deployment para K3D
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: todo-app
  labels:
    app: backend
    component: api
    version: v1
spec:
  replicas: 3
  selector:
    matchLabels:
      app: backend
      version: v1
  template:
    metadata:
      labels:
        app: backend
        component: api
        version: v1
    spec:
      initContainers:
      - name: wait-for-mongodb
        image: busybox:1.36
        command: 
        - sh
        - -c
        - |
          until nc -z mongodb-service 27017; do
            echo "Esperando MongoDB..."
            sleep 2
          done
      - name: wait-for-redis
        image: busybox:1.36
        command:
        - sh
        - -c
        - |
          until nc -z redis-service 6379; do
            echo "Esperando Redis..."
            sleep 2
          done
      containers:
      - name: backend
        image: todo-backend:1.0.0
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5000
          name: http
        env:
        - name: PORT
          value: "5000"
        - name: MONGODB_URI
          value: "mongodb://mongodb-service:27017/tododb"
        - name: REDIS_URL
          value: "redis://redis-service:6379"
        - name: NODE_ENV
          value: "production"
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 2

---
# Backend Service (ClusterIP)
apiVersion: v1
kind: Service
metadata:
  name: backend-service
  namespace: todo-app
  labels:
    app: backend
spec:
  type: ClusterIP
  ports:
  - port: 5000
    targetPort: 5000
    name: http
  selector:
    app: backend

---
# Backend Service (NodePort para acceso externo)
apiVersion: v1
kind: Service
metadata:
  name: backend-nodeport
  namespace: todo-app
  labels:
    app: backend
spec:
  type: NodePort
  ports:
  - port: 5000
    targetPort: 5000
    nodePort: 30500
    name: http
  selector:
    app: backend
