// Script de inicializaci√≥n para MongoDB
// Este script crea la base de datos y una colecci√≥n inicial con datos de ejemplo

print('üöÄ Iniciando script de inicializaci√≥n de MongoDB...');

// Cambiar a la base de datos todoapp
db = db.getSiblingDB('todoapp');

print('‚úÖ Base de datos "todoapp" seleccionada');

// Crear colecci√≥n de tareas si no existe
db.createCollection('tasks');

print('‚úÖ Colecci√≥n "tasks" creada');

// Insertar datos de ejemplo
const tasksData = [
  {
    title: 'Bienvenido a la aplicaci√≥n ToDo',
    description: 'Esta es una tarea de ejemplo creada durante la inicializaci√≥n',
    completed: false,
    priority: 'high',
    createdAt: new Date(),
    updatedAt: new Date()
  },
  {
    title: 'Completar examen final de Containerizaci√≥n',
    description: 'Implementar Docker Compose, Swarm y Kubernetes',
    completed: false,
    priority: 'high',
    createdAt: new Date(),
    updatedAt: new Date()
  },
  {
    title: 'Documentar el proyecto',
    description: 'Crear README con instrucciones y diagramas',
    completed: false,
    priority: 'medium',
    createdAt: new Date(),
    updatedAt: new Date()
  },
  {
    title: 'Subir im√°genes a Docker Hub',
    description: 'Publicar todas las im√°genes en un repositorio p√∫blico',
    completed: false,
    priority: 'medium',
    createdAt: new Date(),
    updatedAt: new Date()
  }
];

db.tasks.insertMany(tasksData);

print('‚úÖ ' + tasksData.length + ' tareas de ejemplo insertadas');

// Crear √≠ndices para mejorar el rendimiento
db.tasks.createIndex({ createdAt: -1 });
db.tasks.createIndex({ completed: 1 });
db.tasks.createIndex({ priority: 1 });

print('‚úÖ √çndices creados exitosamente');

// Mostrar estad√≠sticas
const count = db.tasks.countDocuments();
print('üìä Total de tareas en la base de datos: ' + count);

print('‚úÖ Inicializaci√≥n de MongoDB completada exitosamente!');
