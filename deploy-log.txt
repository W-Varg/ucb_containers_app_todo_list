==========================================
  📦 DESPLIEGUE EN K3D - TODO APP
==========================================

[0;34m➜[0m Verificando instalación de K3D...
[0;32m✓[0m K3D instalado: k3d version v5.8.3
[0;34m➜[0m Verificando cluster K3D...
[0;34m➜[0m Creando cluster K3D con configuración personalizada...
[36mINFO[0m[0000] Using config file ./k3d/cluster-config.yaml (k3d.io/v1alpha5#simple) 
[36mINFO[0m[0000] portmapping '9080:80' targets the loadbalancer: defaulting to [servers:*:proxy agents:*:proxy] 
[36mINFO[0m[0000] portmapping '9443:443' targets the loadbalancer: defaulting to [servers:*:proxy agents:*:proxy] 
[36mINFO[0m[0000] portmapping '9500:30500' targets the loadbalancer: defaulting to [servers:*:proxy agents:*:proxy] 
[36mINFO[0m[0000] portmapping '9300:30300' targets the loadbalancer: defaulting to [servers:*:proxy agents:*:proxy] 
[36mINFO[0m[0000] Prep: Network                                
[36mINFO[0m[0000] Created network 'k3d-todo-cluster'           
[36mINFO[0m[0000] Created image volume k3d-todo-cluster-images 
[36mINFO[0m[0000] Creating node 'todo-registry'                
[36mINFO[0m[0000] Successfully created registry 'todo-registry' 
[36mINFO[0m[0000] Starting new tools node...                   
[36mINFO[0m[0000] Starting node 'k3d-todo-cluster-tools'       
[36mINFO[0m[0001] Creating node 'k3d-todo-cluster-server-0'    
[36mINFO[0m[0001] Creating node 'k3d-todo-cluster-agent-0'     
[36mINFO[0m[0001] Creating node 'k3d-todo-cluster-agent-1'     
[36mINFO[0m[0002] Creating node 'k3d-todo-cluster-agent-2'     
[36mINFO[0m[0002] Creating LoadBalancer 'k3d-todo-cluster-serverlb' 
[36mINFO[0m[0002] Using the k3d-tools node to gather environment information 
[36mINFO[0m[0002] HostIP: using network gateway 172.21.0.1 address 
[36mINFO[0m[0002] Starting cluster 'todo-cluster'              
[36mINFO[0m[0002] Starting servers...                          
[36mINFO[0m[0002] Starting node 'k3d-todo-cluster-server-0'    
[36mINFO[0m[0006] Starting agents...                           
[36mINFO[0m[0007] Starting node 'k3d-todo-cluster-agent-0'     
[36mINFO[0m[0007] Starting node 'k3d-todo-cluster-agent-2'     
[36mINFO[0m[0007] Starting node 'k3d-todo-cluster-agent-1'     
[36mINFO[0m[0012] Starting helpers...                          
[36mINFO[0m[0012] Starting node 'todo-registry'                
[36mINFO[0m[0012] Starting node 'k3d-todo-cluster-serverlb'    
[36mINFO[0m[0019] Injecting records for hostAliases (incl. host.k3d.internal) and for 6 network members into CoreDNS configmap... 
[36mINFO[0m[0022] Cluster 'todo-cluster' created successfully! 
[36mINFO[0m[0022] You can now use it like this:                
kubectl cluster-info
[0;32m✓[0m Cluster 'todo-cluster' creado exitosamente
[0;34m➜[0m Esperando a que el cluster esté listo...
[0;34m➜[0m Configurando kubectl context...
Switched to context "k3d-todo-cluster".
[0;32m✓[0m Context configurado: k3d-todo-cluster
[0;34m➜[0m Creando directorios para volúmenes persistentes...
[0;32m✓[0m Directorios creados
[0;34m➜[0m Preparando imágenes Docker para K3D registry...
[0;31m✗[0m Imagen todo-backend:1.0.0 no encontrada. Construyendo...
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 995B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/node:18-alpine
#2 DONE 2.6s

#3 [internal] load .dockerignore
#3 transferring context: 200B done
#3 DONE 0.0s

#4 [1/6] FROM docker.io/library/node:18-alpine@sha256:8d6421d663b4c28fd3ebc498332f249011d118945588d0a35cb9bc4b8ca09d9e
#4 DONE 0.0s

#5 [internal] load build context
#5 transferring context: 8.49kB done
#5 DONE 0.0s

#6 [2/6] WORKDIR /app
#6 CACHED

#7 [3/6] COPY package*.json ./
#7 CACHED

#8 [4/6] RUN npm install --only=production && npm cache clean --force
#8 CACHED

#9 [5/6] COPY . .
#9 DONE 0.0s

#10 [6/6] RUN addgroup -g 1001 -S nodejs &&     adduser -S nodejs -u 1001 &&     chown -R nodejs:nodejs /app
#10 DONE 5.4s

#11 exporting to image
#11 exporting layers
#11 exporting layers 0.4s done
#11 writing image sha256:35498a506d762758500f52ac0d76f5972b327162f7633479191e783223f9e20a done
#11 naming to docker.io/library/todo-backend:1.0.0 done
#11 DONE 0.4s
[0;32m✓[0m Tagged: todo-backend:1.0.0 → k3d-todo-registry.localhost:5555/todo-backend:1.0.0
[0;31m✗[0m Imagen todo-frontend:1.0.0 no encontrada. Construyendo...
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 2.32kB done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/nginx:alpine
#2 DONE 3.3s

#3 [internal] load .dockerignore
#3 transferring context: 228B done
#3 DONE 0.0s

#4 [internal] load build context
#4 transferring context: 10.67kB done
#4 DONE 0.0s

#5 [1/8] FROM docker.io/library/nginx:alpine@sha256:9dacca6749f2215cc3094f641c5b6662f7791e66a57ed034e806a7c48d51c18f
#5 resolve docker.io/library/nginx:alpine@sha256:9dacca6749f2215cc3094f641c5b6662f7791e66a57ed034e806a7c48d51c18f 0.0s done
#5 sha256:194fa24e147df0010e146240d3b4bd25d04180c523dc717e4645b269991483e3 0B / 628B 0.1s
#5 sha256:3eaba6cd10a374d9ed629c26d76a5258e20ddfa09fcef511c98aa620dcf3fae4 0B / 955B 0.1s
#5 sha256:9dacca6749f2215cc3094f641c5b6662f7791e66a57ed034e806a7c48d51c18f 10.33kB / 10.33kB done
#5 sha256:8f6a6833e95d43ac524f1f9c5e7c1316c1f3b8e7ae5ba3db4e54b0c5b910e80a 0B / 1.84MB 0.1s
#5 sha256:667473807103639a0aca5b49534a216d2b64f0fb868aaa801f023da0cdd781c7 2.50kB / 2.50kB done
#5 sha256:d4918ca78576a537caa7b0c043051c8efc1796de33fee8724ee0fff4a1cabed9 10.96kB / 10.96kB done
#5 sha256:194fa24e147df0010e146240d3b4bd25d04180c523dc717e4645b269991483e3 628B / 628B 0.9s done
#5 sha256:3eaba6cd10a374d9ed629c26d76a5258e20ddfa09fcef511c98aa620dcf3fae4 955B / 955B 0.9s done
#5 sha256:d9a55dab5954588333096b28b351999099bea5eb3c68c10e99f175b12c97198d 0B / 1.21kB 0.9s
#5 sha256:df413d6ebdc834bccf63178455d406c4d25e2c2d38d2c1ab79ee5494b18e5624 0B / 403B 0.9s
#5 sha256:d9a55dab5954588333096b28b351999099bea5eb3c68c10e99f175b12c97198d 1.21kB / 1.21kB 1.2s done
#5 sha256:ff8a36d5502a57c3fc8eeff48e578ab433a03b1dd528992ba0d966ddf853309a 0B / 1.40kB 1.3s
#5 sha256:df413d6ebdc834bccf63178455d406c4d25e2c2d38d2c1ab79ee5494b18e5624 403B / 403B 1.6s done
#5 sha256:ff8a36d5502a57c3fc8eeff48e578ab433a03b1dd528992ba0d966ddf853309a 1.40kB / 1.40kB 1.5s done
#5 sha256:bdabb0d442710d667f4fd871b5fd215cc2a430a95b192bc508bf945b8e60999b 0B / 16.97MB 1.7s
#5 sha256:8f6a6833e95d43ac524f1f9c5e7c1316c1f3b8e7ae5ba3db4e54b0c5b910e80a 0B / 1.84MB 5.2s
#5 sha256:bdabb0d442710d667f4fd871b5fd215cc2a430a95b192bc508bf945b8e60999b 1.05MB / 16.97MB 5.4s
#5 sha256:8f6a6833e95d43ac524f1f9c5e7c1316c1f3b8e7ae5ba3db4e54b0c5b910e80a 1.05MB / 1.84MB 7.6s
#5 sha256:bdabb0d442710d667f4fd871b5fd215cc2a430a95b192bc508bf945b8e60999b 2.10MB / 16.97MB 8.9s
#5 sha256:8f6a6833e95d43ac524f1f9c5e7c1316c1f3b8e7ae5ba3db4e54b0c5b910e80a 1.05MB / 1.84MB 12.8s
#5 sha256:8f6a6833e95d43ac524f1f9c5e7c1316c1f3b8e7ae5ba3db4e54b0c5b910e80a 1.84MB / 1.84MB 13.2s done
#5 extracting sha256:8f6a6833e95d43ac524f1f9c5e7c1316c1f3b8e7ae5ba3db4e54b0c5b910e80a 0.1s done
#5 extracting sha256:194fa24e147df0010e146240d3b4bd25d04180c523dc717e4645b269991483e3 done
#5 extracting sha256:3eaba6cd10a374d9ed629c26d76a5258e20ddfa09fcef511c98aa620dcf3fae4 done
#5 extracting sha256:df413d6ebdc834bccf63178455d406c4d25e2c2d38d2c1ab79ee5494b18e5624
#5 sha256:bdabb0d442710d667f4fd871b5fd215cc2a430a95b192bc508bf945b8e60999b 3.15MB / 16.97MB 13.7s
#5 extracting sha256:df413d6ebdc834bccf63178455d406c4d25e2c2d38d2c1ab79ee5494b18e5624 done
#5 extracting sha256:d9a55dab5954588333096b28b351999099bea5eb3c68c10e99f175b12c97198d done
#5 extracting sha256:ff8a36d5502a57c3fc8eeff48e578ab433a03b1dd528992ba0d966ddf853309a done
#5 sha256:bdabb0d442710d667f4fd871b5fd215cc2a430a95b192bc508bf945b8e60999b 3.15MB / 16.97MB 18.8s
#5 sha256:bdabb0d442710d667f4fd871b5fd215cc2a430a95b192bc508bf945b8e60999b 4.19MB / 16.97MB 19.5s
#5 sha256:bdabb0d442710d667f4fd871b5fd215cc2a430a95b192bc508bf945b8e60999b 5.24MB / 16.97MB 21.8s
#5 sha256:bdabb0d442710d667f4fd871b5fd215cc2a430a95b192bc508bf945b8e60999b 6.29MB / 16.97MB 23.9s
#5 sha256:bdabb0d442710d667f4fd871b5fd215cc2a430a95b192bc508bf945b8e60999b 7.34MB / 16.97MB 25.7s
#5 sha256:bdabb0d442710d667f4fd871b5fd215cc2a430a95b192bc508bf945b8e60999b 8.39MB / 16.97MB 27.4s
#5 sha256:bdabb0d442710d667f4fd871b5fd215cc2a430a95b192bc508bf945b8e60999b 9.44MB / 16.97MB 29.9s
#5 sha256:bdabb0d442710d667f4fd871b5fd215cc2a430a95b192bc508bf945b8e60999b 10.49MB / 16.97MB 31.8s
#5 sha256:bdabb0d442710d667f4fd871b5fd215cc2a430a95b192bc508bf945b8e60999b 11.53MB / 16.97MB 33.5s
#5 sha256:bdabb0d442710d667f4fd871b5fd215cc2a430a95b192bc508bf945b8e60999b 12.58MB / 16.97MB 35.1s
#5 sha256:bdabb0d442710d667f4fd871b5fd215cc2a430a95b192bc508bf945b8e60999b 13.63MB / 16.97MB 38.6s
#5 sha256:bdabb0d442710d667f4fd871b5fd215cc2a430a95b192bc508bf945b8e60999b 14.68MB / 16.97MB 41.8s
#5 sha256:bdabb0d442710d667f4fd871b5fd215cc2a430a95b192bc508bf945b8e60999b 15.73MB / 16.97MB 44.2s
#5 sha256:bdabb0d442710d667f4fd871b5fd215cc2a430a95b192bc508bf945b8e60999b 16.78MB / 16.97MB 46.0s
#5 sha256:bdabb0d442710d667f4fd871b5fd215cc2a430a95b192bc508bf945b8e60999b 16.97MB / 16.97MB 46.2s done
#5 extracting sha256:bdabb0d442710d667f4fd871b5fd215cc2a430a95b192bc508bf945b8e60999b 0.1s
#5 extracting sha256:bdabb0d442710d667f4fd871b5fd215cc2a430a95b192bc508bf945b8e60999b 0.4s done
#5 DONE 46.8s

#6 [2/8] WORKDIR /app
#6 DONE 0.2s

#7 [3/8] COPY public ./public
#7 DONE 0.1s

#8 [4/8] COPY src ./src
#8 DONE 0.0s

#9 [5/8] COPY package.json ./
#9 DONE 0.0s

#10 [6/8] RUN mkdir -p build &&     echo '<!DOCTYPE html><html lang="es"><head><meta charset="utf-8"/><meta name="viewport" content="width=device-width, initial-scale=1"/><title>ToDo App</title><style>body{margin:0;font-family:Arial,sans-serif;background:linear-gradient(135deg,#667eea 0%,#764ba2 100%);min-height:100vh;display:flex;align-items:center;justify-content:center}.container{background:white;padding:2rem;border-radius:12px;box-shadow:0 4px 6px rgba(0,0,0,0.1);max-width:600px;width:90%}h1{color:#667eea;margin-bottom:1rem}p{color:#666;line-height:1.6}.button{background:#667eea;color:white;padding:0.75rem 1.5rem;border:none;border-radius:8px;cursor:pointer;font-size:1rem;margin-top:1rem;text-decoration:none;display:inline-block}.button:hover{background:#5568d3}</style></head><body><div class="container"><h1>📝 ToDo App - UCB Final Project</h1><p>Sistema de gestión de tareas completamente containerizado</p><p><strong>Características:</strong></p><ul><li>Dockerizado con 6 servicios</li><li>🔄 Orquestado con Docker Swarm</li><li>☸️ Desplegable en Kubernetes</li><li>📊 Balanceo de carga con Nginx</li></ul><a href="/api/tasks" class="button">Ver API</a> <a href="/health" class="button">Health Check</a><p style="margin-top:2rem;font-size:0.9rem;color:#999">Proyecto Final - Containerización y Orquestación</p></div></body></html>' > build/index.html
#10 DONE 0.2s

#11 [7/8] RUN echo "server { listen 3000; root /usr/share/nginx/html; location / { try_files $uri /index.html; } }" > /etc/nginx/conf.d/default.conf
#11 DONE 0.2s

#12 [8/8] RUN cp -r build/* /usr/share/nginx/html/
#12 DONE 0.2s

#13 exporting to image
#13 exporting layers 0.1s done
#13 writing image sha256:09afd88096152691e724571ab36b9aa0a42bf2ef9e81cb2b7207e372914f1cf8 done
#13 naming to docker.io/library/todo-frontend:1.0.0 done
#13 DONE 0.1s
[0;32m✓[0m Tagged: todo-frontend:1.0.0 → k3d-todo-registry.localhost:5555/todo-frontend:1.0.0
[0;31m✗[0m Imagen todo-worker:1.0.0 no encontrada. Construyendo...
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 982B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/node:18-alpine
#2 ...

#3 [auth] library/node:pull token for registry-1.docker.io
#3 DONE 0.0s

#2 [internal] load metadata for docker.io/library/node:18-alpine
#2 DONE 1.2s

#4 [internal] load .dockerignore
#4 transferring context: 151B done
#4 DONE 0.0s

#5 [1/6] FROM docker.io/library/node:18-alpine@sha256:8d6421d663b4c28fd3ebc498332f249011d118945588d0a35cb9bc4b8ca09d9e
#5 DONE 0.0s

#6 [internal] load build context
#6 transferring context: 6.79kB done
#6 DONE 0.0s

#7 [2/6] WORKDIR /app
#7 CACHED

#8 [3/6] COPY package*.json ./
#8 CACHED

#9 [4/6] RUN npm install --only=production && npm cache clean --force
#9 CACHED

#10 [5/6] COPY . .
#10 DONE 0.0s

#11 [6/6] RUN addgroup -g 1001 -S nodejs &&     adduser -S nodejs -u 1001 &&     chown -R nodejs:nodejs /app
#11 DONE 3.9s

#12 exporting to image
#12 exporting layers
#12 exporting layers 0.3s done
#12 writing image sha256:089f4fc6eac64b2694ecc00640ec88ee6142dd8506a4c2ffa88df5d0d82665e3 done
#12 naming to docker.io/library/todo-worker:1.0.0 done
#12 DONE 0.3s
[0;32m✓[0m Tagged: todo-worker:1.0.0 → k3d-todo-registry.localhost:5555/todo-worker:1.0.0
[0;31m✗[0m Imagen todo-nginx:1.0.0 no encontrada. Construyendo...
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 934B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/nginx:alpine
#2 ...

#3 [auth] library/nginx:pull token for registry-1.docker.io
#3 DONE 0.0s

#2 [internal] load metadata for docker.io/library/nginx:alpine
#2 DONE 1.1s

#4 [internal] load .dockerignore
#4 transferring context: 2B done
#4 DONE 0.0s

#5 [1/4] FROM docker.io/library/nginx:alpine@sha256:9dacca6749f2215cc3094f641c5b6662f7791e66a57ed034e806a7c48d51c18f
#5 CACHED

#6 [internal] load build context
#6 transferring context: 2.86kB done
#6 DONE 0.0s

#7 [2/4] RUN rm /etc/nginx/conf.d/default.conf
#7 DONE 0.2s

#8 [3/4] COPY nginx.conf /etc/nginx/conf.d/default.conf
#8 DONE 0.0s

#9 [4/4] RUN echo '<!DOCTYPE html><html><head><title>Error</title></head><body><h1>Servicio temporalmente no disponible</h1><p>Por favor, intenta nuevamente en unos momentos.</p></body></html>' > /usr/share/nginx/html/50x.html
#9 DONE 0.2s

#10 exporting to image
#10 exporting layers 0.1s done
#10 writing image sha256:9be16c29893e7200de29460a4b5a58df24d7a5fbc158ee2e66ff66d03c1dd1e0 done
#10 naming to docker.io/library/todo-nginx:1.0.0 done
#10 DONE 0.1s
[0;32m✓[0m Tagged: todo-nginx:1.0.0 → k3d-todo-registry.localhost:5555/todo-nginx:1.0.0
[0;34m➜[0m Subiendo imágenes al registry K3D...
The push refers to repository [k3d-todo-registry.localhost:5555/todo-backend]
4e1eb036a72e: Preparing
09834c096155: Preparing
e61020259cc6: Preparing
e8a62553d897: Preparing
17595ad42f6e: Preparing
82140d9a70a7: Preparing
f3b40b0cdb1c: Preparing
0b1f26057bd0: Preparing
08000c18d16d: Preparing
82140d9a70a7: Waiting
f3b40b0cdb1c: Waiting
0b1f26057bd0: Waiting
08000c18d16d: Waiting
09834c096155: Pushed
e8a62553d897: Pushed
17595ad42f6e: Pushed
82140d9a70a7: Pushed
f3b40b0cdb1c: Pushed
08000c18d16d: Pushed
e61020259cc6: Pushed
4e1eb036a72e: Pushed
0b1f26057bd0: Pushed
1.0.0: digest: sha256:019340d81d902b8c04d4d4aae3decd9d68ef6beedfa389dea0ffcdf832eb8c9a size: 2201
[0;32m✓[0m Pushed: todo-backend:1.0.0
The push refers to repository [k3d-todo-registry.localhost:5555/todo-frontend]
20fc0af024d6: Preparing
ed580a0a2b29: Preparing
4c0ceee0ffdc: Preparing
32ff2d49b643: Preparing
1b5899bc11fc: Preparing
126213c3fc51: Preparing
b6d13a7fa201: Preparing
25906c27b84d: Preparing
99ea4bde418d: Preparing
3297b9628ff3: Preparing
b74d92be8225: Preparing
2c79d5d895bb: Preparing
25906c27b84d: Waiting
99ea4bde418d: Waiting
3297b9628ff3: Waiting
126213c3fc51: Waiting
b74d92be8225: Waiting
b6d13a7fa201: Waiting
2660a7d4b906: Preparing
50b58ca2a3f5: Preparing
256f393e029f: Preparing
2c79d5d895bb: Waiting
2660a7d4b906: Waiting
50b58ca2a3f5: Waiting
256f393e029f: Waiting
4c0ceee0ffdc: Pushed
20fc0af024d6: Pushed
ed580a0a2b29: Pushed
1b5899bc11fc: Pushed
32ff2d49b643: Pushed
126213c3fc51: Pushed
b6d13a7fa201: Pushed
99ea4bde418d: Pushed
3297b9628ff3: Pushed
b74d92be8225: Pushed
2c79d5d895bb: Pushed
2660a7d4b906: Pushed
50b58ca2a3f5: Pushed
256f393e029f: Pushed
25906c27b84d: Pushed
1.0.0: digest: sha256:e510a0a555182309660f0fba2e1c1a0da1b3fa5d0669725295033ce573cdbcba size: 3439
[0;32m✓[0m Pushed: todo-frontend:1.0.0
The push refers to repository [k3d-todo-registry.localhost:5555/todo-worker]
76b6386216ef: Preparing
36d7dc9f86c1: Preparing
7718ab9e31ca: Preparing
a430321faa58: Preparing
17595ad42f6e: Preparing
82140d9a70a7: Preparing
f3b40b0cdb1c: Preparing
0b1f26057bd0: Preparing
08000c18d16d: Preparing
f3b40b0cdb1c: Waiting
0b1f26057bd0: Waiting
08000c18d16d: Waiting
82140d9a70a7: Waiting
17595ad42f6e: Mounted from todo-backend
36d7dc9f86c1: Pushed
82140d9a70a7: Mounted from todo-backend
a430321faa58: Pushed
f3b40b0cdb1c: Mounted from todo-backend
08000c18d16d: Mounted from todo-backend
0b1f26057bd0: Mounted from todo-backend
7718ab9e31ca: Pushed
76b6386216ef: Pushed
1.0.0: digest: sha256:a31330f5d9a6e45826f06310d1fa0c7feaee612c17a844c7c02907a8632c6f4a size: 2201
[0;32m✓[0m Pushed: todo-worker:1.0.0
The push refers to repository [k3d-todo-registry.localhost:5555/todo-nginx]
e2d17e1032ee: Preparing
f6a534039a18: Preparing
eafcb14498db: Preparing
25906c27b84d: Preparing
99ea4bde418d: Preparing
3297b9628ff3: Preparing
b74d92be8225: Preparing
2c79d5d895bb: Preparing
2660a7d4b906: Preparing
50b58ca2a3f5: Preparing
256f393e029f: Preparing
3297b9628ff3: Waiting
b74d92be8225: Waiting
2c79d5d895bb: Waiting
2660a7d4b906: Waiting
50b58ca2a3f5: Waiting
256f393e029f: Waiting
25906c27b84d: Mounted from todo-frontend
99ea4bde418d: Mounted from todo-frontend
eafcb14498db: Pushed
f6a534039a18: Pushed
2c79d5d895bb: Mounted from todo-frontend
b74d92be8225: Mounted from todo-frontend
3297b9628ff3: Mounted from todo-frontend
e2d17e1032ee: Pushed
2660a7d4b906: Mounted from todo-frontend
50b58ca2a3f5: Mounted from todo-frontend
256f393e029f: Mounted from todo-frontend
1.0.0: digest: sha256:794998c699f99b5554a300acc5a42f025c2fb5c4d26a98f6a5e0f09f1d1891f7 size: 2611
[0;32m✓[0m Pushed: todo-nginx:1.0.0
[0;34m➜[0m Desplegando aplicación en K3D...

Aplicando manifiestos en orden...
namespace/todo-app created
[0;32m✓[0m Namespace creado
configmap/todo-config created
secret/todo-secrets created
[0;32m✓[0m ConfigMaps y Secrets aplicados
persistentvolumeclaim/mongodb-pvc created
persistentvolumeclaim/redis-pvc created
[0;32m✓[0m PersistentVolumeClaims creados
statefulset.apps/mongodb created
service/mongodb-service created
[0;32m✓[0m MongoDB desplegado
deployment.apps/redis created
service/redis-service created
[0;32m✓[0m Redis desplegado
deployment.apps/backend created
service/backend-service created
service/backend-nodeport created
[0;32m✓[0m Backend API desplegado
deployment.apps/frontend created
service/frontend-service created
service/frontend-nodeport created
[0;32m✓[0m Frontend desplegado
deployment.apps/worker created
[0;32m✓[0m Worker desplegado
deployment.apps/nginx-ingress created
service/nginx-loadbalancer created
[0;32m✓[0m Nginx Ingress desplegado
[0;34m➜[0m Esperando a que todos los pods estén listos...
timed out waiting for the condition on pods/backend-54bbfcfc47-2t9kp
timed out waiting for the condition on pods/backend-54bbfcfc47-dkghj
timed out waiting for the condition on pods/backend-54bbfcfc47-vklt4
timed out waiting for the condition on pods/frontend-67f4d4c5df-jnpz2
timed out waiting for the condition on pods/frontend-67f4d4c5df-tbdrg
timed out waiting for the condition on pods/mongodb-0
timed out waiting for the condition on pods/nginx-ingress-5c44f58d4c-6tszv
timed out waiting for the condition on pods/nginx-ingress-5c44f58d4c-m4zxt
timed out waiting for the condition on pods/redis-584b4db97f-xhtlf
timed out waiting for the condition on pods/worker-96c66d548-7lkrt
timed out waiting for the condition on pods/worker-96c66d548-njvdb

==========================================
  📊 ESTADO DEL DESPLIEGUE
==========================================

[0;34m➜[0m Pods en el namespace 'todo-app':
NAME                             READY   STATUS              RESTARTS   AGE     IP          NODE                        NOMINATED NODE   READINESS GATES
backend-54bbfcfc47-2t9kp         0/1     ErrImagePull        0          5m21s   10.42.1.5   k3d-todo-cluster-agent-1    <none>           <none>
backend-54bbfcfc47-dkghj         0/1     ImagePullBackOff    0          5m21s   10.42.0.3   k3d-todo-cluster-agent-0    <none>           <none>
backend-54bbfcfc47-vklt4         0/1     ErrImagePull        0          5m21s   10.42.3.3   k3d-todo-cluster-server-0   <none>           <none>
frontend-67f4d4c5df-jnpz2        0/1     ImagePullBackOff    0          5m10s   10.42.3.4   k3d-todo-cluster-server-0   <none>           <none>
frontend-67f4d4c5df-tbdrg        0/1     ImagePullBackOff    0          5m10s   10.42.2.4   k3d-todo-cluster-agent-2    <none>           <none>
mongodb-0                        1/1     Running             0          5m41s   10.42.2.3   k3d-todo-cluster-agent-2    <none>           <none>
nginx-ingress-5c44f58d4c-6tszv   0/1     ContainerCreating   0          5m      <none>      k3d-todo-cluster-agent-1    <none>           <none>
nginx-ingress-5c44f58d4c-m4zxt   0/1     ContainerCreating   0          5m      <none>      k3d-todo-cluster-server-0   <none>           <none>
redis-584b4db97f-xhtlf           1/1     Running             0          5m31s   10.42.1.4   k3d-todo-cluster-agent-1    <none>           <none>
worker-96c66d548-7lkrt           0/1     ImagePullBackOff    0          5m5s    10.42.2.5   k3d-todo-cluster-agent-2    <none>           <none>
worker-96c66d548-njvdb           0/1     ImagePullBackOff    0          5m5s    10.42.0.4   k3d-todo-cluster-agent-0    <none>           <none>

[0;34m➜[0m Servicios en el namespace 'todo-app':
NAME                 TYPE           CLUSTER-IP      EXTERNAL-IP   PORT(S)          AGE
backend-nodeport     NodePort       10.43.208.154   <none>        5000:30500/TCP   5m21s
backend-service      ClusterIP      10.43.3.56      <none>        5000/TCP         5m21s
frontend-nodeport    NodePort       10.43.175.31    <none>        80:30300/TCP     5m10s
frontend-service     ClusterIP      10.43.168.63    <none>        80/TCP           5m10s
mongodb-service      ClusterIP      None            <none>        27017/TCP        5m41s
nginx-loadbalancer   LoadBalancer   10.43.128.169   <pending>     80:30366/TCP     5m
redis-service        ClusterIP      10.43.143.170   <none>        6379/TCP         5m31s

[0;34m➜[0m PersistentVolumeClaims:
NAME          STATUS   VOLUME                                     CAPACITY   ACCESS MODES   STORAGECLASS   VOLUMEATTRIBUTESCLASS   AGE
mongodb-pvc   Bound    pvc-ffdbae65-fcd0-4919-9caa-20f9d8c437bf   5Gi        RWO            local-path     <unset>                 5m46s
redis-pvc     Bound    pvc-9f894b74-b9ef-4541-b8e2-91ce470e15a0   1Gi        RWO            local-path     <unset>                 5m46s

==========================================
  🎉 DESPLIEGUE COMPLETADO
==========================================

[0;32m✓ Aplicación desplegada exitosamente en K3D[0m

📍 URLs de acceso:
   • Frontend:  http://localhost:3000
   • Backend:   http://localhost:5000
   • Nginx LB:  http://localhost:8080

🔍 Comandos útiles:
   • Ver pods:        kubectl get pods -n todo-app
   • Ver logs:        kubectl logs -f <pod-name> -n todo-app
   • Ejecutar shell:  kubectl exec -it <pod-name> -n todo-app -- sh
   • Ver servicios:   kubectl get svc -n todo-app
   • Port forward:    kubectl port-forward svc/backend-service 5000:5000 -n todo-app

🧪 Probar la API:
   curl http://localhost:5000/health
   curl http://localhost:5000/api/todos

🛑 Para eliminar todo:
   ./cleanup-k3d.sh

